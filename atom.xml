<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://qiyulong.top</id>
    <title>吃小熊的霸王龙</title>
    <updated>2020-05-29T06:25:56.476Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://qiyulong.top"/>
    <link rel="self" href="https://qiyulong.top/atom.xml"/>
    <subtitle>学而不思则罔，思而不学则殆</subtitle>
    <logo>https://qiyulong.top/images/avatar.png</logo>
    <icon>https://qiyulong.top/favicon.ico</icon>
    <rights>All rights reserved 2020, 吃小熊的霸王龙</rights>
    <entry>
        <title type="html"><![CDATA[tp3.2foreach循环的复选框提交数据]]></title>
        <id>https://qiyulong.top/post/tp32foreach-xun-huan-de-fu-xuan-kuang-ti-jiao-shu-ju/</id>
        <link href="https://qiyulong.top/post/tp32foreach-xun-huan-de-fu-xuan-kuang-ti-jiao-shu-ju/">
        </link>
        <updated>2020-05-29T06:21:32.000Z</updated>
        <content type="html"><![CDATA[<p>name=&quot;id[{$info.id}]&quot;<br>
此处的name中以数组形式传递，里面的键必须含有（只为id[]那不是数组）。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[js-访问页面变执行js函数]]></title>
        <id>https://qiyulong.top/post/js-fang-wen-ye-mian-bian-zhi-xing-js-han-shu/</id>
        <link href="https://qiyulong.top/post/js-fang-wen-ye-mian-bian-zhi-xing-js-han-shu/">
        </link>
        <updated>2020-05-28T18:29:09.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://qiyulong.top/post-images/1590690595338.png" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[tp3.2出现报错-非法数据对象！]]></title>
        <id>https://qiyulong.top/post/tp32-chu-xian-bao-cuo-fei-fa-shu-ju-dui-xiang/</id>
        <link href="https://qiyulong.top/post/tp32-chu-xian-bao-cuo-fei-fa-shu-ju-dui-xiang/">
        </link>
        <updated>2020-05-28T18:25:28.000Z</updated>
        <content type="html"><![CDATA[<p>原因：与create有关。</p>
<p>解决：不要create+add，而用 data[]= '';+add<br>
不要create+save，而用 data[]= '';+save</p>
<p>举例：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mi>a</mi><mi>t</mi><mi>a</mi><msup><mo>[</mo><mo mathvariant="normal">′</mo></msup><mi>a</mi><mi>c</mi><mi>c</mi><mi>o</mi><mi>u</mi><mi>n</mi><msub><mi>t</mi><mi>b</mi></msub><mi>a</mi><mi>n</mi><msup><mi>k</mi><mo mathvariant="normal">′</mo></msup><mo>]</mo><msup><mo>=</mo><mo mathvariant="normal">′</mo></msup><mi>T</mi><mi>h</mi><mi>i</mi><mi>n</mi><mi>k</mi><mi>P</mi><mi>H</mi><msup><mi>P</mi><mo mathvariant="normal">′</mo></msup><mo separator="true">;</mo></mrow><annotation encoding="application/x-tex">data[&#x27;account_bank&#x27;] = &#x27;ThinkPHP&#x27;;
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mopen"><span class="mopen">[</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord mathdefault">a</span><span class="mord mathdefault">c</span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel">=</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault">h</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">;</span></span></span></span>data['account'] = 'ThinkPHP@gmail.com';<br>
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi><mi>s</mi><mi>t</mi><mo>=</mo></mrow><annotation encoding="application/x-tex">rst =</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span></span></span>Teacher-&gt;data($data)-&gt;add();</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[表格里的复选框]]></title>
        <id>https://qiyulong.top/post/biao-ge-li-de-fu-xuan-kuang/</id>
        <link href="https://qiyulong.top/post/biao-ge-li-de-fu-xuan-kuang/">
        </link>
        <updated>2020-05-27T17:15:06.000Z</updated>
        <content type="html"><![CDATA[<p>在每个表格隐藏一个input，之后便和普通的input一致。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ThinkPHP 3.2.3 增加 VIEW目录 变量替换]]></title>
        <id>https://qiyulong.top/post/thinkphp-323-zeng-jia-view-mu-lu-bian-liang-ti-huan/</id>
        <link href="https://qiyulong.top/post/thinkphp-323-zeng-jia-view-mu-lu-bian-liang-ti-huan/">
        </link>
        <updated>2020-05-19T06:51:35.000Z</updated>
        <content type="html"><![CDATA[<p>修改ThinkPHP\Library\Behavior目录下ContentReplaceBehavior.class.php</p>
<p>// 系统默认的特殊变量替换<br>
<img src="https://qiyulong.top/post-images/1589871482225.png" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[负载均衡]]></title>
        <id>https://qiyulong.top/post/fu-zai-jun-heng/</id>
        <link href="https://qiyulong.top/post/fu-zai-jun-heng/">
        </link>
        <updated>2020-05-19T03:41:25.000Z</updated>
        <content type="html"><![CDATA[<p>一个域名可以解析出几个IP地址，例如在访问www.163.com时，抓包得到的DNS响应包中有2个IP地址：221.229.167.47和58.220.39.91，如下图所示。<br>
<img src="https://qiyulong.top/post-images/1589859843184.jpg" alt="" loading="lazy"></p>
<p>虽然DNS解析得到了多个IP，但是大多数软件只会使用第一个IP地址，<br>
原因：当我一个IP到DNS上面请求DNS域名解析的时候，DNS系统会根据你的IP地址所到达的域名对应的IP地址中路由跳数最小的那个IP地址作为访问的IP地址，具体你可以用LINUX的NSLOOKUP来查看域名所对应的IP地址，然后用PC的TRACERT的功能把所有DNS解析出来的IP地址进行跳数记录，然后在访问该域名，查看具体是哪个地址解析给你的PC。比如百度，你会发现他上面实际解析出来的不是IP地址，而是 http://www.a.shifen.com这个域名，这个域名往下面去才是IP地址，而我估计，这个域名应该是百度自建的一个域名系统，最重要的作用就是指定你的IP所访问百度这个网址会使用到哪个IP地址，而使用CNAME有个好处就是，我IP地址去做改动的时候不需要去DNS运营商上面做改动，只需要自己的服务器做改动就好，方便自己的域名与实际IP地址做对应。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[DNS服务器]]></title>
        <id>https://qiyulong.top/post/dns-fu-wu-qi/</id>
        <link href="https://qiyulong.top/post/dns-fu-wu-qi/">
        </link>
        <updated>2020-05-16T01:14:05.000Z</updated>
        <content type="html"><![CDATA[<p>什么是DNS服务器？作用？<br>
1.DNS（Domain Name Server，域名服务器）是进行域名(domain name)和与之相对应的IP地址 (IP address)转换的服务器。<br>
2.域名解析：将域名转换为ip并发送给指定服务器。</p>
<p>PC端访问一个网址的过程：<br>
PC-&gt;DNS服务器（高速缓存访问记录，期限两天）-&gt;跟服务器（根据域【区-.com/.cn】返回对应的.com服务器IP地址）-&gt;DNS服务器（接收IP地址并访问）-&gt;.com/.cn服务器（查找访问的内容）-&gt;DNS服务器-&gt;PC端（呈现页面）<br>
<img src="https://qiyulong.top/post-images/1589592291834.png" alt="" loading="lazy"><br>
（8.8.8.8为谷歌架设的DNS服务器）</p>
<p>备注：<br>
高速缓存：期限两天，可手动删除。<br>
跟服务器：全球分为13组共计150多台，中国三四台，用于查询域服务器（.com或.cn等）对应的IP地址。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[boostrap-table父子表]]></title>
        <id>https://qiyulong.top/post/boostrap-table-fu-zi-biao/</id>
        <link href="https://qiyulong.top/post/boostrap-table-fu-zi-biao/">
        </link>
        <updated>2020-05-15T14:27:50.000Z</updated>
        <content type="html"><![CDATA[<p>script type=&quot;text/javascrpt&quot;&gt;<br>
$(function () {<br>
//1.初始化Table<br>
var oTable = new TableInit();<br>
oTable.Init();</p>
<pre><code>        //2.初始化Button的点击事件
        var oButtonInit = new ButtonInit();
        oButtonInit.Init();

        //3.初始化select的change事件
        $(&quot;#zl_export&quot;).change(function () {
            $('#tb_departments').bootstrapTable('refreshOptions', {
                exportDataType: $(this).val()
            });
        });
		$(&quot;#term&quot;).change(function () {
		    $('#tb_departments').bootstrapTable('refreshOptions', {
		        exportDataType: $(this).val()
		    });
		});
        $(&quot;#area_id&quot;).change(function () {
            $('#tb_departments').bootstrapTable('refreshOptions', {
                exportDataType: $(this).val()
            });
        });
        $(&quot;#school_id&quot;).change(function () {
            $('#tb_departments').bootstrapTable('refreshOptions', {
                exportDataType: $(this).val()
            });
        });
    });

    var TableInit = function () {
        var oTableInit = new Object();
        //初始化Table
        oTableInit.Init = function () {
            $('#tb_departments').bootstrapTable({
                url: '__CONTROLLER__/data',         //请求后台的URL（*）
				method: 'get',                      //请求方式（*）
                toolbar: '#toolbar',                //工具按钮用哪个容器
                striped: true,                      //是否显示行间隔色
                cache: false,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                pagination: true,                   //是否显示分页（*）
                sortable: true,                     //是否启用排序
                sortOrder: &quot;asc&quot;,                   //排序方式
                queryParams: oTableInit.queryParams,//传递参数（*）
                sidePagination: &quot;client&quot;,           //分页方式：client客户端分页，Factory服务端分页（*）
                pageNumber: 1,                       //初始化加载第一页，默认第一页
                pageSize: 10,                       //每页的记录行数（*）
                pageList: [10, 25, 50, 100],        //可供选择的每页的行数（*）
                search: true,                       //是否显示表格搜索
                // strictSearch: false, //是否启用全匹配搜索
                showColumns: true,                  //是否显示所有的列
                showRefresh: true,              //是否显示刷新按钮
                // showPaginationSwitch: true,
                minimumCountColumns: 2,             //最少允许的列数
                // clickToSelect: true,                //是否启用点击选中行
                // height: 500,                        //行高，如果没有设置height属性，表格自动根据记录条数觉得表格高度
                uniqueId: &quot;id&quot;,                     //每一行的唯一标识，一般为主键列
                showToggle: true,                    //是否显示详细视图和列表视图的切换按钮
                cardView: false,                    //是否显示详细视图
                detailView: true,                   //是否显示父子表
                showExport: true,
                exportDataType: &quot;basic&quot;,
                //注册加载子表的事件。注意下这里的三个参数！
                onExpandRow: function (index, row, $detail) {
                    oTableInit.Init2(index, row, $detail);
                },
                onDblClickCell: function (field, value, row, $element) {
                    show(field, value, row, $element);
                },
                columns: [	
					{
						title: '序号',
						formatter: function (value, row, index) {
							return index + 1;
						}
					}, {
						field: 'name',
						title: '院部名称'
					},
                ]
            });
        };
		oTableInit.Init2 = function (index, row, $detail) {
		    var parentid = row.id;
		    var cur_table2 = $detail.html('&lt;table class=&quot;tb_2&quot;&gt;&lt;/table&gt;').find('table');
		    $(cur_table2).bootstrapTable({
				url: &quot;__CONTROLLER__/data2/id/&quot; + parentid,        //请求后台的URL（*）
		        // url: &quot;__CONTROLLER__/data&quot; + parentid,
		        method: 'get',
		        uniqueId: &quot;id&quot;,
		        pageSize: 10,
		        pageList: [10, 25],
		        columns: [
				[
					{
						&quot;title&quot;: &quot;管理员列表&quot;,
						&quot;halign&quot;:&quot;center&quot;,
						&quot;align&quot;:&quot;center&quot;,
						&quot;colspan&quot;: 5
					}
				],
				[
		        {
		            title: '序号',
		            formatter: function (value, row, index) {
		                return index + 1;
		            }
		        }, {
		            field: 'name',
		            title: '教师姓名'
		        }, {
		            field: 'start_at',
		            title: '教师编号'
		        }, {
		            field: 'id',
		            formatter: function (value, row, index) {
		                var a = '&lt;a class=&quot;red&quot; href=&quot;__CONTROLLER__/del/id/' + value + '&quot;&gt;删除&lt;/a&gt;';
		                return a;
		            },
		            title: '操作',
		        },
				],
		        ],
		        // 无线循环取子表，直到子表里面没有记录
		        // onExpandRow: function (index, row, $Subdetail) {
		        //     oTableInit.Init3(index, row, $Subdetail);
		        // }
		    });
		};


        //得到查询的参数
        oTableInit.queryParams = function (params) {
            var temp = {   //这里的键的名字和控制器的变量名必须一直，这边改动，控制器也需要改成一样的
                // shop_id: $(&quot;#shop_id&quot;).val()
                // limit: params.limit,   //页面大小
                // offset: params.offset,  //页码
                // departmentname: $(&quot;#txt_search_departmentname&quot;).val(),
            };
            return temp;
        };
        return oTableInit;
    };

    var ButtonInit = function () {
        var oInit = new Object();
        var postdata = {};
        oInit.Init = function () {
            //初始化页面上面的按钮事件

        };

        return oInit;
    };
&lt;/script&gt;</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[二维数组及多维数组]]></title>
        <id>https://qiyulong.top/post/er-wei-shu-zu-ji-duo-wei-shu-zu/</id>
        <link href="https://qiyulong.top/post/er-wei-shu-zu-ji-duo-wei-shu-zu/">
        </link>
        <updated>2020-05-15T08:45:21.000Z</updated>
        <content type="html"><![CDATA[<p><strong>无非就是循环，依次循环逐渐变为一维数组。</strong><br>
举例：<br>
foreach (￥array as ￥k =&gt; ￥v) {<br>
￥data['teachers_id'] = ￥v['id'];<br>
}<br>
说明：<br>
￥k为一维数组键，￥v为一维数组的值（二维数组的键[形式为数组因为￥k对应多个￥v]），因此二维数组的值以￥v为数组，含有的字段为键并查询出对应值。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[tp接收json字符串如何转换]]></title>
        <id>https://qiyulong.top/post/tp-jie-shou-json-zi-fu-chuan-ru-he-zhuan-huan/</id>
        <link href="https://qiyulong.top/post/tp-jie-shou-json-zi-fu-chuan-ru-he-zhuan-huan/">
        </link>
        <updated>2020-05-15T02:06:21.000Z</updated>
        <content type="html"><![CDATA[<p>==&lt;?php<br>
// JSON编码的字符串<br>
$json = '{&quot;a&quot;:7, &quot;b&quot;:5, &quot;c&quot;:5, &quot;d&quot;:11, &quot;f&quot;:19}';</p>
<p>// 使用json_decode（）函数对JSON字符串进行解码<br>
//转换成对象类型<br>
var_dump(json_decode($json));</p>
<p>//转换成数组类型<br>
var_dump(json_decode($json, true));<br>
?&gt;==</p>
<p>tp3.2接收ajax发送的json数据时：￥data = I('post.');然后使用json_decode(￥json, true)进行格式转换。或ajax为POST请求，使用如下接收并转换：￥array = json_decode($_POST['array'], true);</p>
]]></content>
    </entry>
</feed>